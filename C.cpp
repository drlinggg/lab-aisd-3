/*@@#*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++%##
@@##===============+++++++++++++++++++++++++++++++++++++++++++++++++++++++===%%%
@@#*=========================================================================%%%
@@%#=========================================================================%%%
@@%#--------------===-=================================---------------------=%%%
@@%#===========================================================+============+%%%
@@%#========================================================================+###
@@%*=========================================================================#*#
@@%*==============================---========================================#*#
@@%*=============================::=+=+++=+++=+++-===========================#**
@%%*==============================+*#*+++++++++*++-:-========================***
@%#*==============================++*++==++++**##**-:========================*+*
@%#*============================+==+-==#--+=+++*+++=-++======================*+*
@%#+============+=+=+++=====+++=-==-=+*%=-=++=:-+-====+++++++===+============+++
@#*+==+++++++++=++++++++++++++==:==%%+-%%#-+#==::=::=++++++++++++++=+=+======+++
@#*+=++++++++++=+++++++++++++++-+-+%*-.%@@%***:*=:::+++++++++++++++=++++++++=+++
@#+++++++++++++=+++++++++++++=+-+-*#@%%@@@@@*:+-+.::=++**++++++++++=++++++++++++
@#+++++++++++++=+++++++++++++++=+::-@@@@*%@@@@%*+:::=+*******+++*++=++++++++++++
@#+++++++++++++=*++++++++++*+++==:::-%@@%#%@@%=:::::=+*************+******++++++
%*++++++++++++++*++*+++++***+++=-:-:::+%@@@%=:::::::==*************+********++++
%*++++++++++++++************++++::=:::-*###*-:::::::==*************+********++++
%*+++++++++++**+************++++-:=:-#%%@%%##*-:::::-++************+********+++=
%*+++++++++****+*************=++--#@@@%@@@@%#%%%=::::==************+********++==
%*++++*********+*************=++===%@@#%@%#%@@*====+:-++##*********+********++==
%*++***********+*************=+@====+#%%%%%#======#@+-+=####*******+********++==
%+++***********+************++#@%====++---=#=====+@@%===##########*+********++==
%+++***********+##############%@@======+--=--====%%@@+++###########*########*+==
%+=+**#########*#############*@@@*=====+*=%*====+@%@@*+*###########*########*+==
%+=*###########*############*%@@@%*====-#=%+====%%%@@@+############*########*+==
%+=*###########*############%@@@@%#-===-%%%====*@#%@@@%############*########*+==
#+=*#######################*@@@@@@*=====#@%====%##%@@%#############*########*+==
#+=*#########################*%%#%@#+---==-::::::+*#%##############*########*+==
#+=*############################*@@@*==------:--:-%@###############*########*===
#+=*##############################@%+==============*############%##*########*===
#==*###############################+==-=============*##############*########*===
#==*##############################*===========-======+#############*########*===
#==*#############################*=====================############*########*===
#==*#############################=======================###########*########*===
#==*############################+=======================*##########*########+===
#==*############################========================+##########*########+===
#==*###########################*=========================##########*########+===
#==*###########################================-=========+#########*########+===
#==*###########################================:==========#########*########+===
#==*##########################=================:==========+########*########+===
#==*#########################+-====-===========--==========########*########+===
#==*###########*############+======-===========--==========########*########+==-
#==*###########*###########==-====--===========--==========*#######*########+==-
#==*###########*##########=======-=============-=-=========-#######*########+===
*==*###########*#########=======-=-============-=============######*########+===*/
#include <bits/stdc++.h>
#define fast std::cin.tie(0);std::ios_base::sync_with_stdio(0);
using namespace std;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
const ll RBN = 1e9+7;
const ll RSN = -(1e9+7);
const double PI = 3.141592653589793;
//mt19937_64 rnd(chrono::steady_clock::now().time_since_epoch().count()); ll gen(){return rnd()%100;}

void insertion_sort(string* array, int size, int len, int place) {
     for (int i = 1; i < size; i++) {
        int currect = i;
        while (currect > 0 && (int (array[currect][len-place]) < int (array[currect-1][len-place]))) {
            swap(array[currect], array[currect-1]);
            currect--;
        }
    }
}


signed main()
{
    fast;
    ll n, k, t;
    cin >> n >> k >> t;
    string array[n];
    for (int i = 0; i < n; i++) {
        cin >> array[i];
    }
    for (int i = 1; i <= t; i++) {
        insertion_sort(array, n, k, i);
    }
    for (int i = 0; i < n; i++) {
        cout << array[i] << '\n';
    }
    return 0;
}
